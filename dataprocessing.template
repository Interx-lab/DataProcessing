{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Architecture for data processing. Get data from Kinesis, process via Lambda function and send it DynamoDB and CloudWatch",

  "Parameters" : {
    "OperatorEMail": {
      "Description": "EMail address to notify if there are any scaling operations",
      "Type": "String",
      "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
      "ConstraintDescription": "must be a valid email address"
    },
    "SensorElementHashKeyName": {
      "Description": "HashType PrimaryKey Name for DynamoDB",
      "Type": "String",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "MinLength": "1",
      "MaxLength": "2048",
      "ConstraintDescription": "must contain only alphanumberic characters"
    },
    "SensorElementHashKeyType": {
      "Description": "HashType PrimaryKey Type for DynamoDB",
      "Type": "String",
      "Default": "S",
      "AllowedPattern": "[S|N]",
      "MinLength": "1",
      "MaxLength": "1",
      "ConstraintDescription": "must be either S or N"
    },
    "ReadCapacityUnits": {
      "Description": "DynamoDB read throughput",
      "Type": "Number",
      "Default": "5",
      "MinValue": "5",
      "MaxValue": "10000",
      "ConstraintDescription": "must be between 5 and 10000"
    },
    "WriteCapacityUnits": {
      "Description": "DynamoDB write throughput",
      "Type": "Number",
      "Default": "10",
      "MinValue": "5",
      "MaxValue": "10000",
      "ConstraintDescription": "must be between 5 and 10000"
    }
  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1" : {
        "AMI" : "ami-76f0061f"
      },
      "us-west-1" : {
        "AMI" : "ami-655a0a20"
      },
      "eu-west-1" : {
        "AMI" : "ami-7fd4e10b"
      },
      "ap-northeast-1" : {
        "AMI" : "ami-8e08a38f"
      },
      "ap-southeast-1" : {
        "AMI" : "ami-72621c20"
      }
    }
  },

  "Resources" : {
    "NotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [ { "Endpoint": { "Ref": "OperatorEMail" }, "Protocol": "email" }]
      }
    },
    "AutoScalingGroup": {
      "Type" : "AWS::IAM::Group",
      "Properties" : {
        "Policies": [{
          "PolicyName": "AutoScalingPolicy",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": ""
          }
        }]

      }

    },
    "ScaleUpPolicy" : {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": { "Ref" : "AutoScalingGroup"},
        "Cooldown": "60",
        "ScalingAdjustment": "1"
      }
    },
    "ScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "AutoScalingGroup"},
        "Cooldown" : "60",
        "ScalingAdjustment": "-1"
      }
    },
    "CPUAlarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm if CPU too high or metric disappears indicating instance is down",
        "MetricName" : "CPUUtilization",
        "EvaluationPeriods" : "2",
        "Statistic" : "Average",
        "Threshold" : "90",
        "Period" : "300",
        "AlarmActions" : [{ "Ref" : "ScaleUpPolicy" }],
        "Namespace": "AWS/EC2",
        "Dimensions" : [{
          "Name" : "AutoScalingGroupName",
          "Value" : { "Ref" : "AutoScalingGroup"}
        }],
        "ComparisonOperator" : "GreaterThanThreshold"
      }
    },
    "CPUAlarmLow": {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Scale-down if CPU < 70% for 10 minutes",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Avareage",
        "Period" : "300",
        "EvaluationPeriods": "2",
        "Threshold" : "70",
        "AlarmActions" : { "Ref" : "ScaleDownPolicy" },
        "Dimensions" : [{
          "Name" : "AutoScalingGroupName",
          "Value" : { "Ref" : "AutoScalingGroup" }
        }],
        "ComparisonOperator" : "LessThanThreshold"
      }
    },
    "SensorDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": {
          "AttributeName": { "Ref": "SensorElementHashKeyName" },
          "AttributeType": { "Ref": "SensorElementHashKeyType" }
        },
        "KeySchema": [ {
          "AttributeName": { "Ref": "SensorElementHashKeyName" },
          "KeyType": "HASH"
        } ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": { "Ref": "ReadCapacityUnits" },
          "WriteCapacityUnites": { "Ref": "WriteCapacityUnits" }
        }
      }
    }
  }

}